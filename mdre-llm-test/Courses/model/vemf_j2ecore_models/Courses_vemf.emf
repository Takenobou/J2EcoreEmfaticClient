@namespace(uri="https://www.example.org/java", prefix="java")
package javaPackage;

@Override
@Override
@SuppressWarnings
@Override
@Override
@Override
@Override
class PersonImpl {
	op EObject eStaticClass();
	op EObject getName();
	op void setName(String newName);
	op EObject getId();
	op void setId(EObject newId);
	op EObject getRole();
	op void setRole(String newRole);
	op EObject getAssignmentDelivery();
	op EObject eGet(EObject featureID, EObject ~resolve, EObject coreType);
	op void eSet(EObject featureID, EObject newValue);
	op void eUnset(EObject featureID);
	op EObject eIsSet(EObject featureID);
	op EObject toString();
	attr String NAME_EDEFAULT;
	attr String name;
	attr int ID_EDEFAULT;
	attr int ~id;
	attr String ROLE_EDEFAULT;
	attr String role;
}

@Override
@Deprecated
class CoursesFactoryImpl {
	op EObject init();
	op EObject create(EObject eClass);
	op EObject createCourse();
	op EObject createPerson();
	op EObject createAssignment();
	op EObject createAnswer();
	op EObject getCoursesPackage();
	op EObject getPackage();
}

@Override
@Override
@Override
@SuppressWarnings
@Override
@Override
@Override
@Override
class CourseImpl {
	op EObject eStaticClass();
	op EObject getName();
	op void setName(String newName);
	op EObject getMembers();
	op EObject getId();
	op void setId(String newId);
	op EObject getCredit();
	op void setCredit(EObject newCredit);
	op EObject getAssignments();
	op EObject eInverseRemove(EObject otherEnd, EObject featureID, EObject msgs);
	op EObject eGet(EObject featureID, EObject ~resolve, EObject coreType);
	op void eSet(EObject featureID, EObject newValue);
	op void eUnset(EObject featureID);
	op EObject eIsSet(EObject featureID);
	op EObject toString();
	attr String NAME_EDEFAULT;
	attr String name;
	attr String ID_EDEFAULT;
	attr String ~id;
	attr double CREDIT_EDEFAULT;
	attr double credit;
}

@Override
@Override
@Override
@SuppressWarnings
@Override
@Override
@Override
@Override
class AssignmentImpl {
	op EObject eStaticClass();
	op EObject getName();
	op void setName(String newName);
	op EObject getDescription();
	op void setDescription(String newDescription);
	op EObject isMandatory();
	op void setMandatory(EObject newMandatory);
	op EObject getAnswer();
	op EObject eInverseRemove(EObject otherEnd, EObject featureID, EObject msgs);
	op EObject eGet(EObject featureID, EObject ~resolve, EObject coreType);
	op void eSet(EObject featureID, EObject newValue);
	op void eUnset(EObject featureID);
	op EObject eIsSet(EObject featureID);
	op EObject toString();
	attr String NAME_EDEFAULT;
	attr String name;
	attr String DESCRIPTION_EDEFAULT;
	attr String description;
	attr boolean MANDATORY_EDEFAULT;
	attr boolean mandatory;
}

@Override
@Override
@Override
@Override
@Override
@Override
class AnswerImpl {
	op EObject eStaticClass();
	op EObject getId();
	op void setId(EObject newId);
	op EObject getText();
	op void setText(String newText);
	op EObject isPass();
	op void setPass(EObject newPass);
	op EObject eGet(EObject featureID, EObject ~resolve, EObject coreType);
	op void eSet(EObject featureID, EObject newValue);
	op void eUnset(EObject featureID);
	op EObject eIsSet(EObject featureID);
	op EObject toString();
	attr int ID_EDEFAULT;
	attr int ~id;
	attr String TEXT_EDEFAULT;
	attr String text;
	attr boolean PASS_EDEFAULT;
	attr boolean pass;
}

class CoursesPackageImpl {
	op EObject init();
	op EObject getCourse();
	op EObject getCourse_Name();
	op EObject getCourse_Members();
	op EObject getCourse_Id();
	op EObject getCourse_Credit();
	op EObject getCourse_Assignments();
	op EObject getPerson();
	op EObject getPerson_Name();
	op EObject getPerson_Id();
	op EObject getPerson_Role();
	op EObject getPerson_AssignmentDelivery();
	op EObject getAssignment();
	op EObject getAssignment_Name();
	op EObject getAssignment_Description();
	op EObject getAssignment_Mandatory();
	op EObject getAssignment_Answer();
	op EObject getAnswer();
	op EObject getAnswer_Id();
	op EObject getAnswer_Text();
	op EObject getAnswer_Pass();
	op EObject getCoursesFactory();
	op void createPackageContents();
	op void initializePackageContents();
	attr boolean isInited;
	attr boolean isCreated;
	attr boolean isInitialized;
}

abstract interface Answer {
	op EObject getId();
	op void setId(EObject value);
	op EObject getText();
	op void setText(String value);
	op EObject isPass();
	op void setPass(EObject value);
}

@Override
@Override
@Override
class CoursesSwitch {
	op EObject isSwitchFor(EObject ePackage);
	op EObject doSwitch(EObject classifierID, EObject theEObject);
	op EObject caseCourse(EObject object);
	op EObject casePerson(EObject object);
	op EObject caseAssignment(EObject object);
	op EObject caseAnswer(EObject object);
	op EObject defaultCase(EObject object);
}

@Override
@Override
class CoursesAdapterFactory {
	op EObject isFactoryForType(EObject object);
	op EObject createAdapter(EObject target);
	op EObject createCourseAdapter();
	op EObject createPersonAdapter();
	op EObject createAssignmentAdapter();
	op EObject createAnswerAdapter();
	op EObject createEObjectAdapter();
}

abstract interface CoursesFactory {
	op EObject createCourse();
	op EObject createPerson();
	op EObject createAssignment();
	op EObject createAnswer();
	op EObject getCoursesPackage();
}

abstract interface CoursesPackage {
	op EObject getCourse();
	op EObject getCourse_Name();
	op EObject getCourse_Members();
	op EObject getCourse_Id();
	op EObject getCourse_Credit();
	op EObject getCourse_Assignments();
	op EObject getPerson();
	op EObject getPerson_Name();
	op EObject getPerson_Id();
	op EObject getPerson_Role();
	op EObject getPerson_AssignmentDelivery();
	op EObject getAssignment();
	op EObject getAssignment_Name();
	op EObject getAssignment_Description();
	op EObject getAssignment_Mandatory();
	op EObject getAssignment_Answer();
	op EObject getAnswer();
	op EObject getAnswer_Id();
	op EObject getAnswer_Text();
	op EObject getAnswer_Pass();
	op EObject getCoursesFactory();
}

abstract interface Literals {
}

abstract interface Person {
	op EObject getName();
	op void setName(String value);
	op EObject getId();
	op void setId(EObject value);
	op EObject getRole();
	op void setRole(String value);
	op EObject getAssignmentDelivery();
}

abstract interface Course {
	op EObject getName();
	op void setName(String value);
	op EObject getMembers();
	op EObject getId();
	op void setId(String value);
	op EObject getCredit();
	op void setCredit(EObject value);
	op EObject getAssignments();
}

abstract interface Assignment {
	op EObject getName();
	op void setName(String value);
	op EObject getDescription();
	op void setDescription(String value);
	op EObject isMandatory();
	op void setMandatory(EObject value);
	op EObject getAnswer();
}

